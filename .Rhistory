df_output <- rbind(df_output, output_temp)
}
}
result <<- df_output
}
)
)
api_key = "97c1f72e01dd5ba3"
country_code = "us,gb,se"
data = c("population","birth_rate")
data = c("population","birth_rate","co2_emissions","fifa","hdi")
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
test3$result
ls()
library(INQStatsR)
api_key = "97c1f72e01dd5ba3"
country_code = "us,gb,se"
data = c("population","birth_rate")
data = c("population","birth_rate","co2_emissions","fifa","hdi")
years = 1990:2000
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
test3$result
api_key = "123"
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
test3$result
data = c("population","birth_rate")
test3 <- databycountry$new(api_key= "a3", country_code = "us,gb,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
years_ch <- gsub(" ", "", toString(years), fixed = TRUE)
data_ch <- gsub(" ", "", toString(data), fixed = TRUE)
url <-  "http://inqstatsapi.inqubu.com"
raw_result <-
GET(
url,
query = list(
api_key = api_key,
countries = country_code,
data = data_ch,
years = years_ch
)
)
raw_result
http_type(raw_result)
raw_content <- rawToChar(raw_result$content)
df_content <- fromJSON(raw_content)
df_content
http_error(raw_result)
http_error(df_content)
http_error(raw_result)
df_content[[1]]
df_content[[1]] == "error"
status_code(raw_result)
df_content$message
api_key = "97c1f72e01dd5ba3"
years = "1h1h1"
raw_result <-
GET(
url,
query = list(
api_key = api_key,
countries = country_code,
data = data_ch,
years = years #years_ch
)
)
http_type(raw_result)
raw_content <- rawToChar(raw_result$content)
df_content <- fromJSON(raw_content)
df_content
status_code(raw_result)
years = 1990:2017
api_key = "123"
years = 1990:2017
years_ch <- gsub(" ", "", toString(years), fixed = TRUE)
data_ch <- gsub(" ", "", toString(data), fixed = TRUE)
url <-  "http://inqstatsapi.inqubu.com"
raw_result <-
GET(
url,
query = list(
api_key = api_key,
countries = country_code,
data = data_ch,
years = years_ch
)
)
raw_content <- rawToChar(raw_result$content)
df_content <- fromJSON(raw_content)
if (df_content[[1]] == "error"|http_error(resp)) {
stop(
sprintf(
"INQStats API request failed [%s]\n<%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed [%s]\n<%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed [%s]\n<%s>",
paste("status code:"status_code(raw_result)),
paste("msg:"df_content$msg)
),
call. = FALSE
)
}
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed [status code:%s]\n<msg:%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
stop(
sprintf(
"INQStats API request failed [status_code:%s]\n<msg:%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed, status_code:[%s]\nmsg:<%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed.\n status_code:[%s]\nmsg:<%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
if (df_content[[1]] == "error"|http_error(raw_result)) {
stop(
sprintf(
"INQStats API request failed.\nstatus_code:[%s]\nmsg:<%s>",
status_code(raw_result),
df_content$msg
),
call. = FALSE
)
}
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se", data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se", data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
test3$result
test3 <- databycountry$new(api_key= "a3", country_code = "us,gb,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
library(INQStatsR)
library(INQStatsR)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se", data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
test3$result
library(jsonlite)
library(httr)
devtools::use_testthat()
library(INQStatsR)
devtools::use_testthat()
library(INQStatsR)
devtools::use_testthat()
devtools::use_testthat()
install.packages(shiny)
install.packages("shiny")
install.packages("dplyr")
library(INQStatsR)
devtools::use_testthat()
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,gb,se", data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
runShinyapp(test3$result)
runShinyapp(test3$result)
library(INQStatsR)
library(INQStatsR)
runShinyapp(test3$result)
test2 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,uk,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
api_key = "97c1f72e01dd5ba3"
country_code = "us,uk,se"
data = c("population","birth_rate")
years = 1990:2017
years_ch <- gsub(" ", "", toString(years), fixed = TRUE)
data_ch <- gsub(" ", "", toString(data), fixed = TRUE)
url <-  "http://inqstatsapi.inqubu.com"
raw_result <-
GET(
url,
query = list(
api_key = api_key,
countries = country_code,
data = data_ch,
years = years_ch
)
)
http_type(raw_result)
raw_result
raw_content <- rawToChar(raw_result$content)
raw_content
match("{\"type\":\"error\",\"msg\":\"Invalid data argument.\"}","error")
substr("{\"type\":\"error\",\"msg\":\"Invalid data argument.\"}","error")
pmatch(raw_content,"error")
pmatch(raw_content,c("error"))
pmatch("error",raw_content)
grep(raw_content,"error")
regexpr(raw_content,"error")
raw_content
class(raw_content)
grep(raw_content,"error",fixed = TRUE)
grep(raw_content,"error",fixed = FALSE)
grep(raw_content,"error",fixed = TRUE, value = TRUE)
grep(raw_content,"error",fixed = TRUE, value = FALSE)
sub("{","[",raw_content)
sub("{}","[",raw_content)
?substr()
a <- substr(raw_content, 3, nchar(raw_content)-3)
a
raw_content
a <- substr(raw_content, 2, nchar(raw_content)-2)
a
a <- substr(raw_content, 2, nchar(raw_content)-1)
a
grep("error",a)
grep("blabla",a)
library(INQStatsR)
test2 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,uk,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
library(INQStatsR)
test2 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = "us,uk,se,lt", data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
library(INQStatsR)
library(INQStatsR)
expect_error(test1 <- databycountry$new(api_key= "a3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
library(INQStatsR)
test2 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","uk","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
class(test3)
class(test3)[1]
test3
class(test3)[1]
test_that("class is correct", {
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
expect_true(class(test3)[1] == "databycountry")
})
library("testthat", lib.loc="~/R/win-library/3.4")
test_that("class is correct", {
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
expect_true(class(test3)[1] == "databycountry")
})
test_that("Error messages are returned if API returns error", {
expect_error(databycountry$new(api_key= "a3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
expect_error(databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","uk"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
})
library(INQStatsR)
test_that("Error messages are returned if API returns error", {
expect_error(databycountry$new(api_key= "a3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
expect_error(databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","uk"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
})
test_that("class is correct", {
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
expect_true(class(test3)[1] == "databycountry")
})
library(INQStatsR)
is.vector("us,uk,lt")
test_that("Error messages are returned if API returns error", {
expect_error(databycountry$new(api_key= "a3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
expect_error(databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","uk"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
})
library("testthat", lib.loc="~/R/win-library/3.4")
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate",),years = 2010:2015)
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2015)
test1$result
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2014)
test1$result
result1 <- data.frame(Country=rep.int("USA",10),
dataset=c(rep.int("population",5),rep.int("birth_rate",5)),
values = c(318857056,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
result1
result1 <- data.frame(Country=rep.int("USA",10),
dataset=c(rep.int("population",5),rep.int("birth_rate",5)),
values = c(round(318857056,0),316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
result1
test1$result[3]
test1$result[4]
test_that("Error messages are returned if API returns error", {
expect_error(databycountry$new(api_key= "a3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
expect_error(databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","uk"), data = c("population","birth_rate","co2_emissions","fifa","hdi"),years = 1990:2015))
})
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2014)
result1 <- data.frame(Country=rep.int("USA",10),
dataset=c(rep.int("population",5),rep.int("birth_rate",5)),
values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
test1$result
test_that("Correct output is returned", {
expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
})
test_that("Correct output is returned", {
#     expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
# })
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2014)
expect_equal(round(test1$result[4],2), c(318857056,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
})
test_that("Correct output is returned", {
#     expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
# })
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2014)
expect_equal(round(numeric(unname(test1$result[4])),2), c(318857056,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
})
unname(test1$result[4])
numeric(unname(test1$result[4]))
as.numeric(unname(test1$result[4]))
unlist((unname(test1$result[4]))
as.numeric(unlist((unname(test1$result[4])))
as.numeric(unlist((unname(test1$result[4]))
)
)
a <- as.numeric(unlist((test1$result[4])))
a
test1$result[4]
class(test1$result[4])
as.vector(test1$result[4])
b <- as.vector(test1$result[4])
class(b)
result1$values
test1$result[4]
result1
result1 <- data.frame(Country=rep.int("USA",10),
dataset=c(rep.int("population",5),rep.int("birth_rate",5)),
values = list(318857056,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
result1
result1 <- data.frame(Country=list(rep.int("USA",10)),
dataset=list(c(rep.int("population",5),rep.int("birth_rate",5))),
values = list(318857056,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83))
result1
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
test1
result1 <- data.frame(Country=rep.int("USA",4),
dataset=c(rep.int("population",2),rep.int("birth_rate",2)),
years = c("2011","2010","2011","2010"),
values = c(311721632,309347057,13.83,13.83))
result1
result1[4]
result1[4] == test1$result[4]
test_that("Correct output is returned", {
#     expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
# })
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
expect_equal(test1$result[4], result1[4])
})
test_that("Correct output is returned", {
#     expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
# })
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
is_equivalent_to(test1$result[4], result1[4])
})
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
class(test1)[1]
test_that("class is correct", {
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
expect_true(class(test1)[1] == "databycountry")
})
test1$years
test1$country_code
test1$data
test1$api_key
test_that("Fields are returned", {
#     expect_that(test1$result[4],equals(values = c(318857056,0,316497531,314112078,311721632,309347057,13.42,13.66,13.68,13.83,13.83)))
# })
expect_true(test1$years == "2010,2011")
expect_true(test1$country_code == "us")
expect_true(test1$data == "population,birth_rate")
expect_true(test1$api_key == "97c1f72e01dd5ba3")
})
test2 <- databycountry$new(api_key = "97c1f72e01dd5ba3",
country_code = c("se","us","lt","gb","no","ru","dk","fi"),
data = c("population",
"bigmac_index",
"death_rate",
"debts_capita",
"debts_percent",
"fixed_telephone_subscriptions",
"jobless_rate",
"life_expectancy",
"olympicsummergames_goldmedals",
"gdp_capita",
"corruption_index",
"birth_rate",
"electric_energy_consumption"),
years = 1990:2017)
length(test2$years)
test2$years[1]
test2$result[1]
length(test2$result)
test_that("Correct output is returned 1", {
test1 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us"), data = c("population","birth_rate"),years = 2010:2011)
result1 <- data.frame(Country=rep.int("USA",4),
dataset=c(rep.int("population",2),rep.int("birth_rate",2)),
years = c("2011","2010","2011","2010"),
values = c(311721632,309347057,13.83,13.83))
is_equivalent_to(test1$result[4], result1[4])
is_equivalent_to(test1$result[3], result1[3])
is_equivalent_to(test1$result[2], result1[2])
is_equivalent_to(test1$result[1], result1[1])
})
test2 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("se","lt"), data = c("death_rate"),years = c(2010,2015))
test2$result
result2 <- data.frame(Country=c(rep.int("Sweden",2),rep.int("Lithuania",2)),
dataset=rep.int("death_rate",4),
years = c("2015","2010","2015","2010"),
values = c(9.40,9.60,14.27,13.60))
result2
result1 <- data.frame(country=rep.int("USA",4),
dataset=c(rep.int("population",2),rep.int("birth_rate",2)),
years = c("2011","2010","2011","2010"),
values = c(311721632,309347057,13.83,13.83))
result2 <- data.frame(country=c(rep.int("Sweden",2),rep.int("Lithuania",2)),
dataset=rep.int("death_rate",4),
years = c("2015","2010","2015","2010"),
values = c(9.40,9.60,14.27,13.60))
is_equivalent_to(test1$result[4], result1[4])
length(1998:2017)
matrix(1998:2017,nrows = 10, ncol = 10)
matrix(1998:2017,nrow = 10, ncol = 10)
df <- databycountry$new(api_key = "97c1f72e01dd5ba3",
country_code = c("se", "no"),
# "se,no,dk,fi,us,de",
data = c("population",
# "bigmac_index",
# "death_rate",
# "debts_capita",
# "debts_percent",
# "fixed_telephone_subscriptions",
# "jobless_rate",
# "life_expectancy",
# "olympicsummergames_goldmedals",
# "gdp_capita",
# "corruption_index",
# "birth_rate",
"electric_energy_consumption"),
years = matrix(1998:2017,nrow = 10, ncol = 10))
df$result
df <- databycountry$new(api_key = "97c1f72e01dd5ba3",
country_code = c("se", "no"),
# "se,no,dk,fi,us,de",
data = c("population",
# "bigmac_index",
# "death_rate",
# "debts_capita",
# "debts_percent",
# "fixed_telephone_subscriptions",
# "jobless_rate",
# "life_expectancy",
# "olympicsummergames_goldmedals",
# "gdp_capita",
# "corruption_index",
# "birth_rate",
"electric_energy_consumption"),
years = c("y2017","y2016"))
df$result
library(INQStatsR)
df <- databycountry$new(api_key = "97c1f72e01dd5ba3",
country_code = c("se", "no"),
# "se,no,dk,fi,us,de",
data = c("population",
# "bigmac_index",
# "death_rate",
# "debts_capita",
# "debts_percent",
# "fixed_telephone_subscriptions",
# "jobless_rate",
# "life_expectancy",
# "olympicsummergames_goldmedals",
# "gdp_capita",
# "corruption_index",
# "birth_rate",
"electric_energy_consumption"),
years = c("y2018","y2015"))
library(INQStatsR)
library(INQStatsR)
library(INQStatsR)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
test3$get_country
test3$get_country()
aa <- test3$get_country()
class(aa)
library(INQStatsR)
test3 <- databycountry$new(api_key= "97c1f72e01dd5ba3", country_code = c("us","gb","se","lt"), data = c("population","birth_rate","co2_emissions","corruption_index","death_rate"),years = 1990:2015)
aa <- test3$get_country()
class(aa)
aa
